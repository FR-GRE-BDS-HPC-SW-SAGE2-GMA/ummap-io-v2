#!/bin/sh
######################################################
#            PROJECT  : ummap-io-v2                  #
#            LICENSE  : Apache 2.0                   #
#            COPYRIGHT: 2020 Bull SAS                #
######################################################

######################################################
#set project name
cfg_set_projet "ummap-io-v2"

######################################################
#test
cfg_add_enable_option --name='test' \
                      --on='-DENABLE_TESTS=${ON}' \
                      --doc='Disable unit tests' \
                      --invert-help
#gcc test coverage
cfg_add_enable_option --name='coverage'  \
                      --on='-DENABLE_COVERAGE=${ON}' \
                      --doc='Enable option to generate test coverage of the lib' \
#junit xml out
cfg_add_enable_option --name='junit-output'  \
                      --on='-DENABLE_JUNIT_OUTPUT=${ON}' \
                      --doc='Save test output in JUnit format (only in self-test mode)' 
#valgrind
cfg_add_enable_option --name='valgrind' \
                      --on='-DENABLE_VALGRIND=${ON}' \
                      --doc='Enable running unit tests into valgrind to generate reports'
#jenkins full features
cfg_add_enable_option --name='jenkins' \
                      --on-enable-inherit='--enable-junit-output --enable-debug "CXXFLAGS=-Wall -fprofile-arcs -ftest-coverage"' \
                      --doc='Enable all checking modes (unit, valgrind, coverage...)'Â \
                      --only='enable'

######################################################
cfg_add_with_option --name='htopml' \
                    --doc='Define where to find the htopml library [/usr]' \
                    --var='HTOPML_PREFIX'

######################################################
cfg_add_with_option --name='ioc-client' \
                    --doc='Define where to find the ioc-client library [/usr]' \
                    --var='IOCCLIENT_PREFIX'

######################################################
#If we want to document extra options
#CFG_CUSTOM_HELP="My custom options:"

######################################################
# here we can parse our own options if we want
# Vars available are :
#  - $arg : full argument (eg. --with-gcc=gcc)
#  - $val : value after first '=', egg 'gcc'
#  - $ON $OFF, $ENABLE, $DISABLE, $WIDTH, $WITHOUT
#cfg_parse_custom_opts()
#{
#	return 1
#}

######################################################
#pre check to ease error messages
#All cmake vars are loaded in memory as OPT_* (OPT_CMAKE_C_FLAGS)
#cfg_custom_pre_check()
#{
#	return 1
#}
